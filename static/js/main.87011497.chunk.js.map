{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["FirebaseTextInput","props","useState","value","setValue","dbRef","refKey","otherProps","Object","useEffect","snapshot","val","onChange","e","obj","instance","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","setDbRef","r","database","ref","placeholder","ReactDOM","render","document","getElementById"],"mappings":"qfAGaA,EAAqB,SAACC,GAAU,MAajBC,mBAbiB,MAapCC,EAboC,KAa7BC,EAb6B,KAcnCC,EAAkBJ,EAdiB,MAc5BK,EAAWL,EAdiB,OAwBrCM,EAAaC,iBAAnB,GAgBA,cAfOD,EAAP,aACOA,EAAP,OAEAE,qBAAU,WACJJ,GAAJ,GACEA,cAAkB,YAChB,GAAIK,EAAJ,SAAuB,CACrB,IAAMC,EAAMD,QAAZ,GAEAN,WAIL,CAACC,EAVJI,IAaE,6BAAOG,SA1BY,SAAAC,GAEnB,GAAIR,GAAJ,EAAqB,CACnB,IAAMS,EAAN,GACAA,KAAcD,SAAdC,MACAT,cAqB6BF,MAAOA,GADxC,KC7BIY,G,MAAWC,IAASC,cATH,CACrBC,OAAQ,0CACRC,WAAY,6BACZC,YAAa,oCACbC,UAAW,aACXC,cAAe,yBACfC,kBAAmB,eACnBC,MAAO,+CAuBMC,EApBH,KAAO,IAAD,EACUvB,mBAAS,MADnB,mBACTG,EADS,KACFqB,EADE,KAUhB,OAPAjB,oBAAU,KACR,GAAIM,EAAU,CACZ,IACMY,EADKX,IAASY,WACPC,IAAI,KACjBH,EAASC,KAEV,CAACZ,IAEF,6BACE,+BAGA,kBAAC,EAAD,CAAmBV,MAAOA,EAAOC,OAAO,OAAOwB,YAAY,gDCxBjEC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.87011497.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport styles from './styles.module.css'\n\nexport const FirebaseTextInput  = (props) => {\n  // console.log('finstance', instance)\n  // const a = instance.database.ref('test-d8283/')\n  // console.log('a', a)\n\n  // useEffect(() => {\n  //   if (instance) {\n  //     console.log('instance.database', instance)\n  //   }\n  // }, [instance])\n\n  // on mount get data from FB\n  // on change \n  const [value, setValue] = useState(null)\n  const { dbRef, refKey } = props\n  const handleChange = e => {\n    // console.log('e', e)\n    if (dbRef && refKey) {\n      const obj = {}\n      obj[refKey] = e.target.value\n      dbRef.update(obj)\n    }\n  }\n  // const instance = props.instance\n  const otherProps = Object.assign({}, props)\n  delete otherProps.dbRef\n  delete otherProps.refKey\n  // console.log('instance', instance)\n  useEffect(() => {\n    if (dbRef && refKey) {\n      dbRef.on('value', (snapshot) => {\n        if (snapshot.exists()) {\n          const val = snapshot.val()[refKey ]\n          // console.log('val', val)\n          setValue(val)\n        }\n      })\n    }\n  }, [dbRef, refKey])\n\n  return (\n    <input onChange={handleChange} value={value} {...otherProps}></input>\n  )\n}","import React, { useState, useEffect }  from 'react'\nimport firebase from 'firebase'\nimport { FirebaseTextInput } from 'react-firebase-input'\nimport 'react-firebase-input/dist/index.css'\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBGVF0Yf_IEvQT3cvt01JO-pE6FMjafCAw\",\n  authDomain: \"test-d8283.firebaseapp.com\",\n  databaseURL: \"https://test-d8283.firebaseio.com\",\n  projectId: \"test-d8283\",\n  storageBucket: \"test-d8283.appspot.com\",\n  messagingSenderId: \"873011175747\",\n  appId: \"1:873011175747:web:a7066a6062c881d3bb4ff6\"\n};\nconst instance = firebase.initializeApp(firebaseConfig);\nconst App = () => {\n  const [dbRef, setDbRef] = useState(null)\n\n  useEffect(() => {\n    if (instance) {\n      const db = firebase.database()\n      const r = db.ref('/')\n      setDbRef(r)\n    }\n  }, [instance])\n  return (\n    <div>\n      <form>\n\n      </form>\n      <FirebaseTextInput dbRef={dbRef} refKey=\"test\" placeholder=\"Create React Library Example ðŸ˜„\" />\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}