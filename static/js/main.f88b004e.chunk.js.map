{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["FirebaseTextInput","props","useState","refKey","handleChange","e","Error","handleCheckboxChange","updateDatabase","value","obj","dbRef","snapshot","otherProps","Object","useEffect","val","setChecked","setValue","checked","App","setDbRef","db","setDb","dbRefString","setDbRefString","config","setConfig","setRefKey","err","setError","success","setSuccess","updateConfigSecrets","a","target","updateDbRef","preventDefault","c","JSON","parse","firebase","initializeApp","t","database","ref","r","message","style","padding","placeholder","rows","cols","onChange","background","color","onClick","display","type","min","max","height","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f88b004e.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport styles from './styles.module.css'\n\nexport const FirebaseTextInput = (props) => {\n  const [value, setValue] = useState('')\n  const [checked, setChecked] = useState('')\n  const { dbRef, refKey } = props\n\n  const handleChange = e => {\n    if (!dbRef) {\n      throw Error('no database reference')\n    }\n    if (!refKey) {\n      throw Error('no reference key')\n    }\n    switch(props.type) {\n      case 'checkbox':\n      case 'radio':\n        handleCheckboxChange(e.target.value)\n      default:\n        updateDatabase(e.target.value)\n    }\n  }\n  const updateDatabase = value => {\n    const obj = {}\n    obj[refKey] = value\n    dbRef.update(obj)\n  }\n  const handleCheckboxChange = value => {\n    const obj = {}\n\n    dbRef.once('value').then(snapshot => {\n      if (snapshot.exists()) {\n        const val = snapshot.val()\n        // console.log('val', val[refKey])\n        if (val[refKey]) {\n          obj[refKey] = false\n        } else {\n          obj[refKey] = true\n        }\n        dbRef.update(obj)\n      }\n    })\n  }\n  // const instance = props.instance\n  const otherProps = Object.assign({}, props)\n  delete otherProps.dbRef\n  delete otherProps.refKey\n  // console.log('instance', instance)\n  useEffect(() => {\n    if (dbRef && refKey) {\n      dbRef.on('value', (snapshot) => {\n        if (snapshot.exists()) {\n          // console.log('snapshot.val()', snapshot.val())\n          let val\n          if (snapshot.val() && snapshot.val()[refKey]) {\n            val = snapshot.val()[refKey]\n          }\n          // console.log('val', val)\n          if (props.type === 'checkbox') {\n            setChecked(val == true)\n          } else if (props.type === 'radio') {\n            setChecked(val === props.value)\n          } else {\n            setValue(val)\n          }\n        }\n      })\n    }\n  }, [dbRef, refKey])\n  if (props.type === 'textarea') {\n    return (\n      <textarea onChange={handleChange} placeholder=\"test\" {...otherProps} disabled={props.disabled || (!dbRef || !refKey)} />\n    )\n  } else if (props.type === 'checkbox') {\n    return (\n    <input onChange={handleChange} {...otherProps} disabled={props.disabled || (!dbRef || !refKey)} checked={checked}></input>\n    )\n  } else if (props.type === 'radio') {\n    return (\n    <input onChange={handleChange} {...otherProps} disabled={props.disabled || (!dbRef || !refKey)} checked={checked}></input>\n    )\n  } else {\n    return (\n      <input onChange={handleChange} value={value} {...otherProps} disabled={props.disabled || (!dbRef || !refKey)}></input>\n    )\n  }\n}\n\n","import React, { useState, useEffect } from 'react'\nimport firebase from 'firebase'\nimport { FirebaseTextInput } from 'react-firebase-input'\nimport 'react-firebase-input/dist/index.css'\n\nconst exampleConfig = `{\n  \"apiKey\": \"YOURAPIKEY\",\n  \"authDomain\": \"PROJECTID.firebaseapp.com\",\n  \"databaseURL\": \"https://PROJECTID.firebaseio.com\",\n  \"projectId\": \"PROJECTID\",\n  \"storageBucket\": \"PROJECTID.appspot.com\",\n  \"messagingSenderId\": \"873011175747\",\n  \"appId\": \"1:873011175747:web:a7066a6062c881d3bb4ff6\"\n}`\n// const instance = firebase.initializeApp(firebaseConfig);\nconst App = () => {\n  // let instance\n  // let db\n  const [dbRef, setDbRef] = useState(null)\n  const [db, setDb] = useState(null)\n  const [dbRefString, setDbRefString] = useState('/')\n  const [config, setConfig] = useState({})\n  const [refKey, setRefKey] = useState('')\n  const [err, setError] = useState('')\n  const [success, setSuccess] = useState('')\n  const [radioInput, setRadioInput] = useState('')\n  const updateConfigSecrets = async e => {\n    setError('')\n    setSuccess('')\n\n    // console.log('e.target.value', e.target.value)\n    setConfig(e.target.value)\n    // updateDbRef()\n    // const raw = e.target.value\n    // try {\n    //   const c = JSON.parse(raw)\n    //   instance = await firebase.initializeApp(c);\n    //   db = firebase.database()\n    //   const r = db.ref(dbRefString)\n    //   setDbRef(r)\n    //   setSuccess('Success.')\n    // } catch (err) {\n    //   // console.log('err', err.message)\n    //   setError(err.message)\n    // }\n  }\n  const handleDbRefChange = e => {\n    // setError('')\n    // setSuccess('')\n    setDbRefString(e.target.value)\n    // let r\n    // try {\n    //   r = db.ref(e.target.value)\n    //   setDbRef(r)\n    // } catch (err) {\n    //   setError(err.message)\n    // }\n  }\n  const handleKeyChange = e => {\n    setRefKey(e.target.value)\n  }\n\n  const updateDbRef = async (e) => {\n    e.preventDefault()\n    try {\n      const c = JSON.parse(config)\n      if (!db) {\n        await firebase.initializeApp(c);\n        const t = firebase.database()\n        setDb(t)\n        setDbRef(t.ref(dbRefString))\n      } else {\n        const r = db.ref(dbRefString)\n        setDbRef(r)\n      }\n      setSuccess('Success.')\n    } catch (err) {\n      setError(err.message)\n    }\n  }\n  // useEffect(() => {\n  //   if (instance) {\n  //     const db = firebase.database()\n  //     const r = db.ref('/')\n  //     setDbRef(r)\n  //   }\n  // }, [instance])\n  return (\n    <div style={{ padding: \"10px 30px\" }}>\n      <form>\n        <h1>Firebase Config</h1>\n        <h3>Paste your Firebase Realtime Database config JSON here</h3>\n        <textarea placeholder={exampleConfig} rows=\"15\" cols=\"40\" onChange={updateConfigSecrets}>\n        </textarea>\n        <h3>Database Reference</h3>\n        <input onChange={handleDbRefChange} value={dbRefString}></input>\n        <h3>Reference Key</h3>\n        <input onChange={handleKeyChange} value={refKey}></input>\n        <br />\n        <br />\n        <h3>Update Configuration</h3>\n        <button style={{background: 'green', color: 'white', padding: '10px'}} onClick={updateDbRef}>Submit</button>\n\n        <p style={{ color: 'red' }}>{err}</p>\n        <p style={{ color: 'green' }}>{success}</p>\n      </form>\n      <hr />\n      <h1>Components</h1>\n      <div style={{ display: 'flex' }}>\n        <ul>\n          <h2>Text Inputs</h2>\n          <li>\n            <h3>FirebaseTextInput</h3>\n            {/* <button onClick={submitConfig}>submit configuration</button> */}\n            <FirebaseTextInput dbRef={dbRef} refKey={refKey} placeholder=\"Edit text here!\" />\n          </li>\n          <li>\n            <h3>FirebaseTextInput[type=\"email\"]</h3>\n            <FirebaseTextInput type=\"email\" dbRef={dbRef} refKey={refKey} placeholder=\"Edit text here!\" />\n          </li>\n          <li>\n            <h3>FirebaseTextInput[type=\"password\"]</h3>\n            <FirebaseTextInput type=\"password\" dbRef={dbRef} refKey={refKey} placeholder=\"Edit text here!\" />\n          </li>\n          <li>\n            <h3>FirebaseTextInput[type=\"tel\"]</h3>\n            <FirebaseTextInput type=\"tel\" dbRef={dbRef} refKey={refKey} placeholder=\"Edit text here!\" />\n          </li>\n        </ul>\n        <ul>\n          <h2>Other Inputs</h2>\n          <li>\n            <h3>FirebaseTextInput[type=\"checkbox\"]</h3>\n            <div>\n              <FirebaseTextInput type=\"checkbox\" dbRef={dbRef} refKey={refKey} placeholder=\"Edit text here!\" />\n              <span>Sets the reference true or false</span>\n            </div>\n          </li>\n          <li>\n            <h3>FirebaseTextInput[type=\"radio\"] (TODO)</h3>\n            <small>Sets the reference to the value of the radio button</small>\n            <form>\n              <div>\n                <FirebaseTextInput type=\"radio\" dbRef={dbRef} refKey={refKey} value=\"cats\" />\n                <span>Cats</span>\n              </div>\n              <div>\n                <FirebaseTextInput type=\"radio\" dbRef={dbRef} refKey={refKey} value=\"dogs\" />\n                <span>Dogs</span>\n              </div>\n              <div>\n                <FirebaseTextInput type=\"radio\" dbRef={dbRef} refKey={refKey} value=\"lizards\" />\n                <span>Lizards</span>\n              </div>\n            </form>\n          </li>\n          <li>\n            <h3>FirebaseTextInput[type=\"textarea\"]</h3>\n            <div>\n              <FirebaseTextInput type=\"textarea\" dbRef={dbRef} refKey={refKey} />\n            </div>\n          </li>\n          <li>\n            <h3>FirebaseTextInput[type=\"range\"]</h3>\n            <div>\n              <FirebaseTextInput type=\"range\" dbRef={dbRef} refKey={refKey} min=\"0\" max=\"100\" />\n            </div>\n          </li>\n        </ul>\n      </div>\n      <div style={{ height: \"900px\" }}>\n\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}