{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["FirebaseTextInput","props","useState","value","setValue","checked","setChecked","dbRef","refKey","handleChange","e","Error","handleCheckboxChange","handleRadioChange","updateDatabase","obj","snapshot","val","otherProps","Object","useEffect","onChange","disabled","App","setDbRef","db","setDb","dbRefString","setDbRefString","localStorage","getItem","config","setConfig","setRefKey","err","setError","success","setSuccess","updateConfigSecrets","a","target","updateDbRef","preventDefault","c","JSON","parse","firebase","initializeApp","t","database","ref","r","message","setItem","style","padding","href","placeholder","rows","cols","background","color","onClick","display","type","min","max","height","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8d004335.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nexport const FirebaseTextInput = (props) => {\n  const [value, setValue] = useState('')\n  const [checked, setChecked] = useState('')\n  const { dbRef, refKey } = props\n\n  const handleChange = e => {\n    if (!dbRef) {\n      throw Error('no database reference')\n    }\n    if (!refKey) {\n      throw Error('no reference key')\n    }\n    switch (props.type) {\n      case 'checkbox':\n        handleCheckboxChange(e.target.value)\n        return\n      case 'radio':\n        handleRadioChange(e.target.value)\n        return\n      default:\n        updateDatabase(e.target.value)\n    }\n  }\n  const updateDatabase = value => {\n    const obj = {}\n    obj[refKey] = value\n    dbRef.update(obj)\n  }\n\n  const handleCheckboxChange = value => {\n    const obj = {}\n\n    dbRef.once('value').then(snapshot => {\n      if (snapshot.exists()) {\n        const val = snapshot.val()\n        if (val[refKey] === true) {\n          obj[refKey] = false\n          setChecked(false)\n        } else {\n          obj[refKey] = true\n          setChecked(true)\n        }\n        dbRef.update(obj)\n      }\n    })\n  }\n  const handleRadioChange = value => {\n    const obj = {}\n\n    dbRef.once('value').then(snapshot => {\n      if (snapshot.exists()) {\n        const val = snapshot.val()\n        if (val[refKey] === value) {\n          obj[refKey] = ''\n        } else {\n          obj[refKey] = value\n        }\n        dbRef.update(obj)\n      }\n    })\n  }\n\n  const otherProps = Object.assign({}, props)\n  delete otherProps.dbRef\n  delete otherProps.refKey\n\n  useEffect(() => {\n    if (!dbRef || !refKey)\n      return\n\n    if (props.type === 'checkbox') {\n      dbRef.once('value').then((snapshot) => {\n        if (snapshot.exists()) {\n          let val\n          if (snapshot.val() && snapshot.val()[refKey]) {\n            val = snapshot.val()[refKey]\n          }\n          setChecked(val == true)\n        }\n      })\n    } else if (props.type === 'radio') {\n      dbRef.on('value', snapshot => {\n        if (snapshot.exists()) {\n          let val\n          if (snapshot.val() && snapshot.val()[refKey]) {\n            val = snapshot.val()[refKey]\n          }\n          setChecked(val === props.value)\n        }\n      })\n    } else {\n      dbRef.on('value', snapshot => {\n        if (snapshot.exists()) {\n          // console.log('snapshot.val()', snapshot.val())\n          let val\n          if (snapshot.val() && snapshot.val()[refKey]) {\n            val = snapshot.val()[refKey]\n          }\n          setValue(val)\n        }\n      })\n    }\n  }, [dbRef, refKey])\n\n  if (props.type === 'textarea') {\n    return (\n      <textarea onChange={handleChange} {...otherProps} disabled={props.disabled || (!dbRef || !refKey)} />\n    )\n  } else if (props.type === 'checkbox') {\n    return (\n      <input onChange={handleChange} {...otherProps} disabled={props.disabled || (!dbRef || !refKey)} checked={checked}></input>\n    )\n  } else if (props.type === 'radio') {\n    return (\n      <input onChange={handleChange} {...otherProps} disabled={props.disabled || (!dbRef || !refKey)} checked={checked}></input>\n    )\n  } else {\n    return (\n      <input onChange={handleChange} value={value} {...otherProps} disabled={props.disabled || (!dbRef || !refKey)}></input>\n    )\n  }\n}\n\n","import React, { useState, useEffect } from 'react'\nimport firebase from 'firebase'\nimport { FirebaseTextInput } from 'react-firebase-input'\nimport 'react-firebase-input/dist/index.css'\n\nconst exampleConfig = `{\n  \"apiKey\": \"YOURAPIKEY\",\n  \"authDomain\": \"PROJECTID.firebaseapp.com\",\n  \"databaseURL\": \"https://PROJECTID.firebaseio.com\",\n  \"projectId\": \"PROJECTID\",\n  \"storageBucket\": \"PROJECTID.appspot.com\",\n  \"messagingSenderId\": \"873011175747\",\n  \"appId\": \"1:873011175747:web:a7066a6062c881d3bb4ff6\"\n}`\n// const instance = firebase.initializeApp(firebaseConfig);\nconst App = () => {\n  // let instance\n  // let db\n  const [dbRef, setDbRef] = useState(null)\n  const [db, setDb] = useState(null)\n  const [dbRefString, setDbRefString] = useState('/')\n  const [config, setConfig] = useState(localStorage.getItem('config') || '')\n  const [refKey, setRefKey] = useState('')\n  const [err, setError] = useState('')\n  const [success, setSuccess] = useState('')\n  // const [radioInput, setRadioInput] = useState('')\n  const updateConfigSecrets = async e => {\n    setError('')\n    setSuccess('')\n    setConfig(e.target.value)\n  }\n  const handleDbRefChange = e => {\n    setDbRefString(e.target.value)\n  }\n  const handleKeyChange = e => {\n    setRefKey(e.target.value)\n  }\n\n  const updateDbRef = async (e) => {\n    if (e) \n      e.preventDefault()\n    try {\n      const c = JSON.parse(config)\n      if (!db) {\n        await firebase.initializeApp(c);\n        const t = firebase.database()\n        setDb(t)\n        setDbRef(t.ref(dbRefString))\n      } else {\n        const r = db.ref(dbRefString)\n        setDbRef(r)\n      }\n      setSuccess('Success.')\n    } catch (err) {\n      setError(err.message)\n    }\n  }\n  useEffect(() => {\n    if (config) {\n      localStorage.setItem('config', config)\n      updateDbRef()\n    }\n  }, [config])\n\n  return (\n    <div style={{ padding: \"10px 30px\" }}>\n      <a href=\"https://github.com/reidjs/react-firebase-input\">Github Repo</a>\n      <form>\n        <h1>Firebase Config</h1>\n        <h3>Paste your Firebase Realtime Database config JSON here</h3>\n        <small>This will be saved in localStorage</small>\n        <br />\n        <textarea placeholder={config || exampleConfig} rows=\"15\" cols=\"40\" onChange={updateConfigSecrets}>\n        </textarea>\n        <h3>Database Reference</h3>\n        <input onChange={handleDbRefChange} value={dbRefString}></input>\n        <h3>Reference Key (must not be blank)</h3>\n        <input onChange={handleKeyChange} value={refKey}></input>\n        <br />\n        <br />\n        <h3>Update Configuration</h3>\n        <button style={{background: 'green', color: 'white', padding: '10px'}} onClick={updateDbRef}>Submit</button>\n\n        <p style={{ color: 'red' }}>{err}</p>\n        <p style={{ color: 'green' }}>{success}</p>\n      </form>\n      <hr />\n      <h1>Components</h1>\n      <div style={{ display: 'flex' }}>\n        <ul>\n          <h2>Text Inputs</h2>\n          <li>\n            <h3>FirebaseTextInput</h3>\n            {/* <button onClick={submitConfig}>submit configuration</button> */}\n            <FirebaseTextInput dbRef={dbRef} refKey={refKey} placeholder=\"Edit text here!\" />\n          </li>\n          <li>\n            <h3>FirebaseTextInput[type=\"email\"]</h3>\n            <FirebaseTextInput type=\"email\" dbRef={dbRef} refKey={refKey} placeholder=\"Edit text here!\" />\n          </li>\n          <li>\n            <h3>FirebaseTextInput[type=\"password\"]</h3>\n            <FirebaseTextInput type=\"password\" dbRef={dbRef} refKey={refKey} placeholder=\"Edit text here!\" />\n          </li>\n          <li>\n            <h3>FirebaseTextInput[type=\"tel\"]</h3>\n            <FirebaseTextInput type=\"tel\" dbRef={dbRef} refKey={refKey} placeholder=\"Edit text here!\" />\n          </li>\n        </ul>\n        <ul>\n          <h2>Other Inputs</h2>\n          <li>\n            <h3>FirebaseTextInput[type=\"checkbox\"]</h3>\n            <div>\n              <FirebaseTextInput type=\"checkbox\" dbRef={dbRef} refKey={refKey} placeholder=\"Edit text here!\" />\n              <span>Sets the reference true or false</span>\n            </div>\n          </li>\n          <li>\n            <h3>FirebaseTextInput[type=\"radio\"]</h3>\n            <small>Sets the reference to the value of the radio button</small>\n            <form>\n              <div>\n                <FirebaseTextInput type=\"radio\" dbRef={dbRef} refKey={refKey} value=\"cats\" />\n                <span>Cats</span>\n              </div>\n              <div>\n                <FirebaseTextInput type=\"radio\" dbRef={dbRef} refKey={refKey} value=\"dogs\" />\n                <span>Dogs</span>\n              </div>\n              <div>\n                <FirebaseTextInput type=\"radio\" dbRef={dbRef} refKey={refKey} value=\"lizards\" />\n                <span>Lizards</span>\n              </div>\n            </form>\n          </li>\n          <li>\n            <h3>FirebaseTextInput[type=\"textarea\"]</h3>\n            <div>\n              <FirebaseTextInput type=\"textarea\" dbRef={dbRef} refKey={refKey} />\n            </div>\n          </li>\n          <li>\n            <h3>FirebaseTextInput[type=\"range\"]</h3>\n            <div>\n              <FirebaseTextInput type=\"range\" dbRef={dbRef} refKey={refKey} min=\"0\" max=\"100\" />\n            </div>\n          </li>\n        </ul>\n      </div>\n      <div style={{ height: \"900px\" }}>\n\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}