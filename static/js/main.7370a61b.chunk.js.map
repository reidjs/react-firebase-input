{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["FirebaseForm","props","dbRef","otherProps","Object","e","obj","child","refkey","value","FirebaseInput","useState","refKey","handleChange","Error","handleCheckboxChange","handleRadioChange","updateDatabase","snapshot","val","setChecked","useEffect","setValue","checked","App","setDbRef","db","setDb","dbRefString","setDbRefString","localStorage","getItem","config","setConfig","setRefKey","err","setError","success","setSuccess","name","setName","email","setEmail","updateConfigSecrets","a","target","updateDbRef","preventDefault","c","JSON","parse","firebase","initializeApp","t","database","ref","r","message","setItem","style","padding","href","placeholder","rows","cols","onChange","color","marginBottom","border","background","onClick","display","flexWrap","type","min","max","margin","height","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7370a61b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nexport const FirebaseForm = (props) => {\n  const { dbRef } = props\n\n  // needs dbRef\n  // each child needs a refkey (this is intentionally lowercase)\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const obj = {}\n    props.children.forEach(child => {\n      // console.log('child', child)\n      const refkey = child.props.refkey\n      if (refkey) {\n        const value = child.props.value\n        obj[refkey] = value\n      }\n    })\n    dbRef.update(obj)\n  }\n\n  const otherProps = Object.assign({}, props)\n  delete otherProps.onSubmit\n  delete otherProps.dbRef\n\n  return (\n    <form {...otherProps} onSubmit={handleSubmit}>\n      {props.children}\n    </form>\n  )\n}\n\nexport const FirebaseInput = (props) => {\n  const [value, setValue] = useState('')\n  const [checked, setChecked] = useState('')\n  const { dbRef, refKey } = props\n\n  const handleChange = e => {\n    if (!dbRef) {\n      throw Error('no database reference')\n    }\n    if (!refKey) {\n      throw Error('no reference key')\n    }\n    switch (props.type) {\n      case 'checkbox':\n        handleCheckboxChange(e.target.value)\n        return\n      case 'radio':\n        handleRadioChange(e.target.value)\n        return\n      default:\n        updateDatabase(e.target.value)\n    }\n  }\n  const updateDatabase = value => {\n    const obj = {}\n    obj[refKey] = value\n    dbRef.update(obj)\n  }\n\n  const handleCheckboxChange = value => {\n    const obj = {}\n\n    dbRef.once('value').then(snapshot => {\n      if (snapshot.exists()) {\n        const val = snapshot.val()\n        if (val[refKey] === true) {\n          obj[refKey] = false\n          setChecked(false)\n        } else {\n          obj[refKey] = true\n          setChecked(true)\n        }\n        dbRef.update(obj)\n      }\n    })\n  }\n  const handleRadioChange = value => {\n    const obj = {}\n\n    dbRef.once('value').then(snapshot => {\n      if (snapshot.exists()) {\n        const val = snapshot.val()\n        if (val[refKey] === value) {\n          obj[refKey] = ''\n        } else {\n          obj[refKey] = value\n        }\n        dbRef.update(obj)\n      }\n    })\n  }\n\n  const otherProps = Object.assign({}, props)\n  delete otherProps.dbRef\n  delete otherProps.refKey\n\n  useEffect(() => {\n    if (!dbRef || !refKey)\n      return\n\n    if (props.type === 'checkbox') {\n      dbRef.once('value').then((snapshot) => {\n        if (snapshot.exists()) {\n          let val\n          if (snapshot.val() && snapshot.val()[refKey]) {\n            val = snapshot.val()[refKey]\n          }\n          setChecked(val == true)\n        }\n      })\n    } else if (props.type === 'radio') {\n      dbRef.on('value', snapshot => {\n        if (snapshot.exists()) {\n          let val\n          if (snapshot.val() && snapshot.val()[refKey]) {\n            val = snapshot.val()[refKey]\n          }\n          setChecked(val === props.value)\n        }\n      })\n    } else {\n      dbRef.on('value', snapshot => {\n        if (snapshot.exists()) {\n          // console.log('snapshot.val()', snapshot.val())\n          let val\n          if (snapshot.val() && snapshot.val()[refKey]) {\n            val = snapshot.val()[refKey]\n          }\n          setValue(val)\n        }\n      })\n    }\n  }, [dbRef, refKey])\n\n  if (props.type === 'textarea') {\n    return (\n      <textarea onChange={handleChange} {...otherProps} disabled={props.disabled || (!dbRef || !refKey)} />\n    )\n  } else if (props.type === 'checkbox') {\n    return (\n      <input onChange={handleChange} {...otherProps} disabled={props.disabled || (!dbRef || !refKey)} checked={checked}></input>\n    )\n  } else if (props.type === 'radio') {\n    return (\n      <input onChange={handleChange} {...otherProps} disabled={props.disabled || (!dbRef || !refKey)} checked={checked}></input>\n    )\n  } else {\n    return (\n      <input onChange={handleChange} value={value} {...otherProps} disabled={props.disabled || (!dbRef || !refKey)}></input>\n    )\n  }\n}\n\n","import React, { useState, useEffect } from 'react'\nimport firebase from 'firebase'\nimport { FirebaseInput, FirebaseForm } from 'react-firebase-input'\nimport 'react-firebase-input/dist/index.css'\n\nconst exampleConfig = `{\n  \"apiKey\": \"YOURAPIKEY\",\n  \"authDomain\": \"PROJECTID.firebaseapp.com\",\n  \"databaseURL\": \"https://PROJECTID.firebaseio.com\",\n  \"projectId\": \"PROJECTID\",\n  \"storageBucket\": \"PROJECTID.appspot.com\",\n  \"messagingSenderId\": \"873011175747\",\n  \"appId\": \"1:873011175747:web:a7066a6062c881d3bb4ff6\"\n}`\n// const instance = firebase.initializeApp(firebaseConfig);\nconst App = () => {\n  // let instance\n  // let db\n  const [dbRef, setDbRef] = useState(null)\n  const [db, setDb] = useState(null)\n  const [dbRefString, setDbRefString] = useState('/')\n  const [config, setConfig] = useState(localStorage.getItem('config') || '')\n  const [refKey, setRefKey] = useState('')\n  const [err, setError] = useState('')\n  const [success, setSuccess] = useState('')\n\n  // FirebaseForm specific\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  // const [radioInput, setRadioInput] = useState('')\n  const updateConfigSecrets = async e => {\n    setError('')\n    setSuccess('')\n    setConfig(e.target.value)\n  }\n  const handleDbRefChange = e => {\n    setDbRefString(e.target.value)\n  }\n  const handleKeyChange = e => {\n    setRefKey(e.target.value)\n  }\n\n  const updateDbRef = async (e) => {\n    if (e)\n      e.preventDefault()\n    try {\n      const c = JSON.parse(config)\n      if (!db) {\n        await firebase.initializeApp(c);\n        const t = firebase.database()\n        setDb(t)\n        setDbRef(t.ref(dbRefString))\n      } else {\n        const r = db.ref(dbRefString)\n        setDbRef(r)\n      }\n      setSuccess('Success.')\n    } catch (err) {\n      setError(err.message)\n    }\n  }\n  useEffect(() => {\n    if (config) {\n      localStorage.setItem('config', config)\n      updateDbRef()\n    }\n  }, [config])\n\n  return (\n    <div style={{ padding: \"10px 30px\" }}>\n      <a href=\"https://github.com/reidjs/react-firebase-input\">Github Repo</a>\n      <form>\n        <h1>Firebase Config</h1>\n        <h3>Paste your Firebase Realtime Database config JSON here</h3>\n        <small>This will be saved in localStorage</small>\n        <br />\n        <textarea placeholder={config || exampleConfig} rows=\"15\" cols=\"40\" onChange={updateConfigSecrets}>\n        </textarea>\n        <h3>Database Reference</h3>\n        <input onChange={handleDbRefChange} value={dbRefString}></input>\n        <h3 style={{ color: (refKey ? '' : 'red'), marginBottom: '0' }}>Reference Key</h3>\n        <small>(Not necessary for FirebaseForm)</small>\n        <h3 />\n        <input onChange={handleKeyChange} style={{ border: refKey ? '' : '1px solid red' }} value={refKey}></input>\n        <br />\n        <br />\n        <h3>Update Configuration</h3>\n        <button style={{ background: 'green', color: 'white', padding: '10px' }} onClick={updateDbRef}>Submit</button>\n\n        <p style={{ color: 'red' }}>{err}</p>\n        <p style={{ color: 'green' }}>{success}</p>\n      </form>\n      <hr />\n      <h1>Components</h1>\n      <div style={{ display: 'flex', flexWrap: 'wrap' }}>\n        <ul>\n          <h2>Text Inputs</h2>\n          <li>\n            <h3>FirebaseInput</h3>\n            {/* <button onClick={submitConfig}>submit configuration</button> */}\n            <FirebaseInput dbRef={dbRef} refKey={refKey} placeholder=\"Edit text here!\" />\n          </li>\n          <li>\n            <h3>FirebaseInput[type=\"email\"]</h3>\n            <FirebaseInput type=\"email\" dbRef={dbRef} refKey={refKey} placeholder=\"Edit text here!\" />\n          </li>\n          <li>\n            <h3>FirebaseInput[type=\"password\"]</h3>\n            <FirebaseInput type=\"password\" dbRef={dbRef} refKey={refKey} placeholder=\"Edit text here!\" />\n          </li>\n          <li>\n            <h3>FirebaseInput[type=\"tel\"]</h3>\n            <FirebaseInput type=\"tel\" dbRef={dbRef} refKey={refKey} placeholder=\"Edit text here!\" />\n          </li>\n        </ul>\n        <ul>\n          <h2>Other Inputs</h2>\n          <li>\n            <h3>FirebaseInput[type=\"checkbox\"]</h3>\n            <div>\n              <FirebaseInput type=\"checkbox\" dbRef={dbRef} refKey={refKey} placeholder=\"Edit text here!\" />\n              <span>Sets the reference true or false</span>\n            </div>\n          </li>\n          <li>\n            <h3>FirebaseInput[type=\"radio\"]</h3>\n            <small>Sets the reference to the value of the radio button</small>\n            <ul>\n              <div>\n                <FirebaseInput type=\"radio\" dbRef={dbRef} refKey={refKey} value=\"cats\" />\n                <span>Cats</span>\n              </div>\n              <div>\n                <FirebaseInput type=\"radio\" dbRef={dbRef} refKey={refKey} value=\"dogs\" />\n                <span>Dogs</span>\n              </div>\n              <div>\n                <FirebaseInput type=\"radio\" dbRef={dbRef} refKey={refKey} value=\"lizards\" />\n                <span>Lizards</span>\n              </div>\n            </ul>\n          </li>\n          <li>\n            <h3>FirebaseInput[type=\"textarea\"]</h3>\n            <div>\n              <FirebaseInput type=\"textarea\" dbRef={dbRef} refKey={refKey} />\n            </div>\n          </li>\n          <li>\n            <h3>FirebaseInput[type=\"range\"]</h3>\n            <div>\n              <FirebaseInput type=\"range\" dbRef={dbRef} refKey={refKey} min=\"0\" max=\"100\" />\n            </div>\n          </li>\n        </ul>\n        <ul>\n          <h2>Forms</h2>\n          <li>\n            <h3>FirebaseForm</h3>\n            <div>\n              <FirebaseForm style={{ border: '1px solid black', padding: '15px' }} dbRef={dbRef}>\n                <div>Example Form</div>\n                <p></p>\n                <div>Name</div>\n                <input onChange={(e) => setName(e.target.value)} value={name} refkey=\"name\" />\n                <div style={{ margin: '10px 0' }}></div>\n                <div>Email</div>\n                <input onChange={(e) => setEmail(e.target.value)} value={email} refkey=\"email\" type=\"email\" />\n                <p></p>\n                <button>Submit</button>\n              </FirebaseForm>\n            </div>\n          </li>\n        </ul>\n      </div>\n      <div style={{ height: \"100px\" }}>\n\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}