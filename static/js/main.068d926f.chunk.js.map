{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["FirebaseTextInput","props","useState","refKey","handleChange","e","Error","handleCheckboxChange","handleRadioChange","updateDatabase","value","obj","dbRef","snapshot","val","setChecked","otherProps","Object","useEffect","setValue","checked","App","setDbRef","db","setDb","dbRefString","setDbRefString","localStorage","getItem","config","setConfig","setRefKey","err","setError","success","setSuccess","updateConfigSecrets","a","target","updateDbRef","preventDefault","c","JSON","parse","firebase","initializeApp","t","database","ref","r","message","setItem","style","padding","placeholder","rows","cols","onChange","background","color","onClick","display","type","min","max","height","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.068d926f.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nexport const FirebaseTextInput = (props) => {\n  const [value, setValue] = useState('')\n  const [checked, setChecked] = useState('')\n  const { dbRef, refKey } = props\n\n  const handleChange = e => {\n    if (!dbRef) {\n      throw Error('no database reference')\n    }\n    if (!refKey) {\n      throw Error('no reference key')\n    }\n    switch (props.type) {\n      case 'checkbox':\n        handleCheckboxChange(e.target.value)\n        return\n      case 'radio':\n        handleRadioChange(e.target.value)\n        return\n      default:\n        updateDatabase(e.target.value)\n    }\n  }\n  const updateDatabase = value => {\n    const obj = {}\n    obj[refKey] = value\n    dbRef.update(obj)\n  }\n\n  const handleCheckboxChange = value => {\n    const obj = {}\n\n    dbRef.once('value').then(snapshot => {\n      if (snapshot.exists()) {\n        const val = snapshot.val()\n        if (val[refKey] === true) {\n          obj[refKey] = false\n          setChecked(false)\n        } else {\n          obj[refKey] = true\n          setChecked(true)\n        }\n        dbRef.update(obj)\n      }\n    })\n  }\n  const handleRadioChange = value => {\n    const obj = {}\n\n    dbRef.once('value').then(snapshot => {\n      if (snapshot.exists()) {\n        const val = snapshot.val()\n        if (val[refKey] === value) {\n          obj[refKey] = ''\n        } else {\n          obj[refKey] = value\n        }\n        dbRef.update(obj)\n      }\n    })\n  }\n\n  const otherProps = Object.assign({}, props)\n  delete otherProps.dbRef\n  delete otherProps.refKey\n\n  useEffect(() => {\n    if (!dbRef || !refKey)\n      return\n\n    if (props.type === 'checkbox') {\n      dbRef.once('value').then((snapshot) => {\n        if (snapshot.exists()) {\n          let val\n          if (snapshot.val() && snapshot.val()[refKey]) {\n            val = snapshot.val()[refKey]\n          }\n          setChecked(val == true)\n        }\n      })\n    } else if (props.type === 'radio') {\n      dbRef.on('value', snapshot => {\n        if (snapshot.exists()) {\n          let val\n          if (snapshot.val() && snapshot.val()[refKey]) {\n            val = snapshot.val()[refKey]\n          }\n          setChecked(val === props.value)\n        }\n      })\n    } else {\n      dbRef.on('value', snapshot => {\n        if (snapshot.exists()) {\n          // console.log('snapshot.val()', snapshot.val())\n          let val\n          if (snapshot.val() && snapshot.val()[refKey]) {\n            val = snapshot.val()[refKey]\n          }\n          setValue(val)\n        }\n      })\n    }\n  }, [dbRef, refKey])\n\n  if (props.type === 'textarea') {\n    return (\n      <textarea onChange={handleChange} {...otherProps} disabled={props.disabled || (!dbRef || !refKey)} />\n    )\n  } else if (props.type === 'checkbox') {\n    return (\n      <input onChange={handleChange} {...otherProps} disabled={props.disabled || (!dbRef || !refKey)} checked={checked}></input>\n    )\n  } else if (props.type === 'radio') {\n    return (\n      <input onChange={handleChange} {...otherProps} disabled={props.disabled || (!dbRef || !refKey)} checked={checked}></input>\n    )\n  } else {\n    return (\n      <input onChange={handleChange} value={value} {...otherProps} disabled={props.disabled || (!dbRef || !refKey)}></input>\n    )\n  }\n}\n\n","import React, { useState, useEffect } from 'react'\nimport firebase from 'firebase'\nimport { FirebaseTextInput } from 'react-firebase-input'\nimport 'react-firebase-input/dist/index.css'\n\nconst exampleConfig = `{\n  \"apiKey\": \"YOURAPIKEY\",\n  \"authDomain\": \"PROJECTID.firebaseapp.com\",\n  \"databaseURL\": \"https://PROJECTID.firebaseio.com\",\n  \"projectId\": \"PROJECTID\",\n  \"storageBucket\": \"PROJECTID.appspot.com\",\n  \"messagingSenderId\": \"873011175747\",\n  \"appId\": \"1:873011175747:web:a7066a6062c881d3bb4ff6\"\n}`\n// const instance = firebase.initializeApp(firebaseConfig);\nconst App = () => {\n  // let instance\n  // let db\n  const [dbRef, setDbRef] = useState(null)\n  const [db, setDb] = useState(null)\n  const [dbRefString, setDbRefString] = useState('/')\n  const [config, setConfig] = useState(localStorage.getItem('config') || '')\n  const [refKey, setRefKey] = useState('')\n  const [err, setError] = useState('')\n  const [success, setSuccess] = useState('')\n  // const [radioInput, setRadioInput] = useState('')\n  const updateConfigSecrets = async e => {\n    setError('')\n    setSuccess('')\n    setConfig(e.target.value)\n  }\n  const handleDbRefChange = e => {\n    setDbRefString(e.target.value)\n  }\n  const handleKeyChange = e => {\n    setRefKey(e.target.value)\n  }\n\n  const updateDbRef = async (e) => {\n    if (e) \n      e.preventDefault()\n    try {\n      const c = JSON.parse(config)\n      if (!db) {\n        await firebase.initializeApp(c);\n        const t = firebase.database()\n        setDb(t)\n        setDbRef(t.ref(dbRefString))\n      } else {\n        const r = db.ref(dbRefString)\n        setDbRef(r)\n      }\n      setSuccess('Success.')\n    } catch (err) {\n      setError(err.message)\n    }\n  }\n  useEffect(() => {\n    if (config) {\n      localStorage.setItem('config', config)\n      updateDbRef()\n    }\n  }, [config])\n\n  return (\n    <div style={{ padding: \"10px 30px\" }}>\n      <form>\n        <h1>Firebase Config</h1>\n        <h3>Paste your Firebase Realtime Database config JSON here</h3>\n        <small>This will be saved in localStorage</small>\n        <br />\n        <textarea placeholder={config || exampleConfig} rows=\"15\" cols=\"40\" onChange={updateConfigSecrets}>\n        </textarea>\n        <h3>Database Reference</h3>\n        <input onChange={handleDbRefChange} value={dbRefString}></input>\n        <h3>Reference Key (must not be blank)</h3>\n        <input onChange={handleKeyChange} value={refKey}></input>\n        <br />\n        <br />\n        <h3>Update Configuration</h3>\n        <button style={{background: 'green', color: 'white', padding: '10px'}} onClick={updateDbRef}>Submit</button>\n\n        <p style={{ color: 'red' }}>{err}</p>\n        <p style={{ color: 'green' }}>{success}</p>\n      </form>\n      <hr />\n      <h1>Components</h1>\n      <div style={{ display: 'flex' }}>\n        <ul>\n          <h2>Text Inputs</h2>\n          <li>\n            <h3>FirebaseTextInput</h3>\n            {/* <button onClick={submitConfig}>submit configuration</button> */}\n            <FirebaseTextInput dbRef={dbRef} refKey={refKey} placeholder=\"Edit text here!\" />\n          </li>\n          <li>\n            <h3>FirebaseTextInput[type=\"email\"]</h3>\n            <FirebaseTextInput type=\"email\" dbRef={dbRef} refKey={refKey} placeholder=\"Edit text here!\" />\n          </li>\n          <li>\n            <h3>FirebaseTextInput[type=\"password\"]</h3>\n            <FirebaseTextInput type=\"password\" dbRef={dbRef} refKey={refKey} placeholder=\"Edit text here!\" />\n          </li>\n          <li>\n            <h3>FirebaseTextInput[type=\"tel\"]</h3>\n            <FirebaseTextInput type=\"tel\" dbRef={dbRef} refKey={refKey} placeholder=\"Edit text here!\" />\n          </li>\n        </ul>\n        <ul>\n          <h2>Other Inputs</h2>\n          <li>\n            <h3>FirebaseTextInput[type=\"checkbox\"]</h3>\n            <div>\n              <FirebaseTextInput type=\"checkbox\" dbRef={dbRef} refKey={refKey} placeholder=\"Edit text here!\" />\n              <span>Sets the reference true or false</span>\n            </div>\n          </li>\n          <li>\n            <h3>FirebaseTextInput[type=\"radio\"]</h3>\n            <small>Sets the reference to the value of the radio button</small>\n            <form>\n              <div>\n                <FirebaseTextInput type=\"radio\" dbRef={dbRef} refKey={refKey} value=\"cats\" />\n                <span>Cats</span>\n              </div>\n              <div>\n                <FirebaseTextInput type=\"radio\" dbRef={dbRef} refKey={refKey} value=\"dogs\" />\n                <span>Dogs</span>\n              </div>\n              <div>\n                <FirebaseTextInput type=\"radio\" dbRef={dbRef} refKey={refKey} value=\"lizards\" />\n                <span>Lizards</span>\n              </div>\n            </form>\n          </li>\n          <li>\n            <h3>FirebaseTextInput[type=\"textarea\"]</h3>\n            <div>\n              <FirebaseTextInput type=\"textarea\" dbRef={dbRef} refKey={refKey} />\n            </div>\n          </li>\n          <li>\n            <h3>FirebaseTextInput[type=\"range\"]</h3>\n            <div>\n              <FirebaseTextInput type=\"range\" dbRef={dbRef} refKey={refKey} min=\"0\" max=\"100\" />\n            </div>\n          </li>\n        </ul>\n      </div>\n      <div style={{ height: \"900px\" }}>\n\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}