{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["FirebaseTextInput","props","useState","value","setValue","dbRef","refKey","otherProps","Object","useEffect","snapshot","val","onChange","e","obj","App","setDbRef","db","setDb","dbRefString","setDbRefString","config","setConfig","setRefKey","err","setError","success","setSuccess","updateConfigSecrets","a","target","updateDbRef","preventDefault","c","JSON","parse","firebase","initializeApp","t","database","ref","r","message","style","padding","placeholder","rows","cols","onClick","color","height","ReactDOM","render","document","getElementById"],"mappings":"6gBAGaA,EAAqB,SAACC,GAAU,MAajBC,mBAbiB,MAapCC,EAboC,KAa7BC,EAb6B,KAcnCC,EAAkBJ,EAdiB,MAc5BK,EAAWL,EAdiB,OAwBrCM,EAAaC,iBAAnB,GAgBA,cAfOD,EAAP,aACOA,EAAP,OAEAE,qBAAU,WACJJ,GAAJ,GACEA,cAAkB,YAChB,GAAIK,EAAJ,SAAuB,CACrB,IAAMC,EAAMD,QAAZ,GAEAN,WAIL,CAACC,EAVJI,IAaE,6BAAOG,SA1BY,SAAAC,GAEnB,GAAIR,GAAJ,EAAqB,CACnB,IAAMS,EAAN,GACAA,KAAcD,SAAdC,MACAT,cAqB6BF,MAAOA,GADxC,KC6EaY,G,MAzGH,KAAM,MAGUb,mBAAS,MAHnB,mBAGTG,EAHS,KAGFW,EAHE,OAIId,mBAAS,MAJb,mBAITe,EAJS,KAILC,EAJK,OAKsBhB,mBAAS,KAL/B,mBAKTiB,EALS,KAKIC,EALJ,OAMYlB,mBAAS,IANrB,mBAMTmB,EANS,KAMDC,EANC,OAOYpB,mBAAS,IAPrB,mBAOTI,EAPS,KAODiB,EAPC,OAQQrB,mBAAS,IARjB,mBAQTsB,EARS,KAQJC,EARI,OAScvB,mBAAS,IATvB,mBASTwB,EATS,KASAC,EATA,KAUVC,EAAmB,uCAAG,WAAMf,GAAN,SAAAgB,EAAA,sDAC1BJ,EAAS,IACTE,EAAW,IAGXL,EAAUT,EAAEiB,OAAO3B,OALO,2CAAH,sDAoCnB4B,EAAW,uCAAG,WAAOlB,GAAP,mBAAAgB,EAAA,yDAClBhB,EAAEmB,iBADgB,SAGVC,EAAIC,KAAKC,MAAMd,GAChBJ,EAJW,iCAKRmB,IAASC,cAAcJ,GALf,OAMRK,EAAIF,IAASG,WACnBrB,EAAMoB,GACNtB,EAASsB,EAAEE,IAAIrB,IARD,wBAURsB,EAAIxB,EAAGuB,IAAIrB,GACjBH,EAASyB,GAXK,QAahBd,EAAW,YAbK,kDAehBF,EAAS,KAAIiB,SAfG,0DAAH,sDAyBjB,OACE,yBAAKC,MAAO,CAAEC,QAAS,cACrB,8BACE,+CACA,sFACA,8BAAUC,YAtFC,gTAsF2BC,KAAK,KAAKC,KAAK,KAAKnC,SAAUgB,IAEpE,kDACA,2BAAOhB,SAjDaC,IAGxBO,EAAeP,EAAEiB,OAAO3B,QA8CgBA,MAAOgB,IAC3C,6CACA,2BAAOP,SAvCWC,IACtBU,EAAUV,EAAEiB,OAAO3B,QAsCmBA,MAAOG,IACzC,6BACA,6BACA,4BAAQ0C,QAASjB,GAAjB,2BAEA,uBAAGY,MAAO,CAAEM,MAAO,QAAUzB,GAC7B,uBAAGmB,MAAO,CAAEM,MAAO,UAAYvB,IAEjC,6BACA,0CACA,4BACE,4BACE,iDAEA,kBAAC,EAAD,CAAmBrB,MAAOA,EAAOC,OAAQA,EAAQuC,YAAY,gDAGjE,yBAAKF,MAAO,CAAEO,OAAQ,cC3G5BC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.6184fa40.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport styles from './styles.module.css'\n\nexport const FirebaseTextInput  = (props) => {\n  // console.log('finstance', instance)\n  // const a = instance.database.ref('test-d8283/')\n  // console.log('a', a)\n\n  // useEffect(() => {\n  //   if (instance) {\n  //     console.log('instance.database', instance)\n  //   }\n  // }, [instance])\n\n  // on mount get data from FB\n  // on change \n  const [value, setValue] = useState(null)\n  const { dbRef, refKey } = props\n  const handleChange = e => {\n    // console.log('e', e)\n    if (dbRef && refKey) {\n      const obj = {}\n      obj[refKey] = e.target.value\n      dbRef.update(obj)\n    }\n  }\n  // const instance = props.instance\n  const otherProps = Object.assign({}, props)\n  delete otherProps.dbRef\n  delete otherProps.refKey\n  // console.log('instance', instance)\n  useEffect(() => {\n    if (dbRef && refKey) {\n      dbRef.on('value', (snapshot) => {\n        if (snapshot.exists()) {\n          const val = snapshot.val()[refKey ]\n          // console.log('val', val)\n          setValue(val)\n        }\n      })\n    }\n  }, [dbRef, refKey])\n\n  return (\n    <input onChange={handleChange} value={value} {...otherProps}></input>\n  )\n}","import React, { useState, useEffect } from 'react'\nimport firebase from 'firebase'\nimport { FirebaseTextInput } from 'react-firebase-input'\nimport 'react-firebase-input/dist/index.css'\n\nconst exampleConfig = `{\n  \"apiKey\": \"YOURAPIKEY\",\n  \"authDomain\": \"PROJECTID.firebaseapp.com\",\n  \"databaseURL\": \"https://PROJECTID.firebaseio.com\",\n  \"projectId\": \"PROJECTID\",\n  \"storageBucket\": \"PROJECTID.appspot.com\",\n  \"messagingSenderId\": \"873011175747\",\n  \"appId\": \"1:873011175747:web:a7066a6062c881d3bb4ff6\"\n}`\n// const instance = firebase.initializeApp(firebaseConfig);\nconst App = () => {\n  // let instance\n  // let db\n  const [dbRef, setDbRef] = useState(null)\n  const [db, setDb] = useState(null)\n  const [dbRefString, setDbRefString] = useState('/')\n  const [config, setConfig] = useState({})\n  const [refKey, setRefKey] = useState('')\n  const [err, setError] = useState('')\n  const [success, setSuccess] = useState('')\n  const updateConfigSecrets = async e => {\n    setError('')\n    setSuccess('')\n\n    // console.log('e.target.value', e.target.value)\n    setConfig(e.target.value)\n    // updateDbRef()\n    // const raw = e.target.value\n    // try {\n    //   const c = JSON.parse(raw)\n    //   instance = await firebase.initializeApp(c);\n    //   db = firebase.database()\n    //   const r = db.ref(dbRefString)\n    //   setDbRef(r)\n    //   setSuccess('Success.')\n    // } catch (err) {\n    //   // console.log('err', err.message)\n    //   setError(err.message)\n    // }\n  }\n  const handleDbRefChange = e => {\n    // setError('')\n    // setSuccess('')\n    setDbRefString(e.target.value)\n    // let r\n    // try {\n    //   r = db.ref(e.target.value)\n    //   setDbRef(r)\n    // } catch (err) {\n    //   setError(err.message)\n    // }\n  }\n  const handleKeyChange = e => {\n    setRefKey(e.target.value)\n  }\n\n  const updateDbRef = async (e) => {\n    e.preventDefault()\n    try {\n      const c = JSON.parse(config)\n      if (!db) {\n        await firebase.initializeApp(c);\n        const t = firebase.database()\n        setDb(t)\n        setDbRef(t.ref(dbRefString))\n      } else {\n        const r = db.ref(dbRefString)\n        setDbRef(r)\n      }\n      setSuccess('Success.')\n    } catch (err) {\n      setError(err.message)\n    }\n  }\n  // useEffect(() => {\n  //   if (instance) {\n  //     const db = firebase.database()\n  //     const r = db.ref('/')\n  //     setDbRef(r)\n  //   }\n  // }, [instance])\n  return (\n    <div style={{ padding: \"10px 30px\" }}>\n      <form>\n        <h1>Firebase Config</h1>\n        <h3>Paste your Firebase Realtime Database config JSON here</h3>\n        <textarea placeholder={exampleConfig} rows=\"15\" cols=\"40\" onChange={updateConfigSecrets}>\n        </textarea>\n        <h3>Database Reference</h3>\n        <input onChange={handleDbRefChange} value={dbRefString}></input>\n        <h3>Reference Key</h3>\n        <input onChange={handleKeyChange} value={refKey}></input>\n        <br />\n        <br />\n        <button onClick={updateDbRef}>Update DB Configuration</button>\n\n        <p style={{ color: 'red' }}>{err}</p>\n        <p style={{ color: 'green' }}>{success}</p>\n      </form>\n      <hr />\n      <h1>Components</h1>\n      <ul>\n        <li>\n          <h2>FirebaseTextInput</h2>\n          {/* <button onClick={submitConfig}>submit configuration</button> */}\n          <FirebaseTextInput dbRef={dbRef} refKey={refKey} placeholder=\"Create React Library Example ðŸ˜„\" />\n        </li>\n      </ul>\n      <div style={{ height: \"900px\" }}>\n\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}